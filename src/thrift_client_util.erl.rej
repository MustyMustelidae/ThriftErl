***************
*** 59,61 ****
      {ok, Protocol} = ProtocolFactory(),
  
      thrift_client:new(Protocol, Service).
--- 64,95 ----
      {ok, Protocol} = ProtocolFactory(),
  
      thrift_client:new(Protocol, Service).
+ 
+ -spec new_multiplexed(Host, Port, Services, Options) -> {ok, ServiceThriftClientList} when
+     Host        :: nonempty_string(),
+     Port        :: non_neg_integer(),
+     Services    :: multiplexed_service_map(),
+     Options     :: list(),
+     ServiceThriftClientList :: [{ServiceName::list(), ThriftClient::term()}].
+ new_multiplexed(Host, Port, Services, Options) when is_integer(Port),
+                                                     is_list(Services),
+                                                     is_list(Options) ->
+     new_multiplexed(thrift_socket_transport:new_transport_factory(Host, Port, Options), Services, Options).
+ 
+ -spec new_multiplexed(TransportFactoryTuple, Services, Options) -> {ok, ServiceThriftClientList} when
+     TransportFactoryTuple   :: {ok, TransportFactory::term()},
+     Services                :: multiplexed_service_map(),
+     Options                 :: list(),
+     ServiceThriftClientList :: [{ServiceName::service_name(), ThriftClient::term()}].
+ new_multiplexed(TransportFactoryTuple, Services, Options) when is_list(Services),
+                                                                is_list(Options),
+                                                                is_tuple(TransportFactoryTuple) ->
+     {ProtoOpts, _} = split_options(Options),
+ 
+     {ok, TransportFactory} = TransportFactoryTuple,
+ 
+     {ok, ProtocolFactory} = thrift_binary_protocol:new_protocol_factory(TransportFactory, ProtoOpts),
+ 
+     {ok, Protocol} = ProtocolFactory(),
+ 
+     {ok, [{ServiceName, element(2, thrift_client:new(element(2, thrift_multiplexed_protocol:new(Protocol, ServiceName)), Service))} || {ServiceName, Service} <- Services]}.
